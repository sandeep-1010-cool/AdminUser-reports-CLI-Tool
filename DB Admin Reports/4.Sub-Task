### Pulumi Infrastructure for Centralized Logging

#### Overview
- Purpose: Deploy consistent centralized logging infrastructure across 8 AWS accounts and 2 regions.
- Outcome: Uniform, secure, and manageable logging setup with cross-account log shipping.

---

### Project Structure & Configuration

#### 1. Pulumi Project Setup
- Create Pulumi TypeScript project with multi-account, multi-region support.
- Use parameterized code to deploy identical infrastructure to all accounts.

#### 2. AWS Resources

##### CloudWatch Log Groups
- Naming convention: `/aws/security-ops/{account}/{region}/{service}/{component}`
- Tiered retention policies:
  - 90 days for security and audit logs.
  - 7 days for operational logs.

##### IAM Roles & Policies
- IAM roles for cross-account log shipping with least privilege.
- Explicit deny IAM policies preventing log deletions on security-critical groups.
- Cross-account assume role setup for secure log shipping.

##### Networking & Security
- VPC endpoints for CloudWatch Logs in each region to avoid egress charges.
- KMS keys configured for log encryption in transit and at rest.

##### Configuration & Metadata
- Parameter Store entries for centralized logging settings.
- Cost allocation tags applied uniformly to all logging resources.

---

### Deployment & Management

#### 1. Multi-Account & Multi-Region Deployment
- Infrastructure templates deployable across all 8 accounts and 2 regions.
- Scripts and config to automate deployments, ensuring consistency.

#### 2. Operational Considerations
- Rollback procedures documented for quick recovery.
- Disaster recovery plans specified and available.
